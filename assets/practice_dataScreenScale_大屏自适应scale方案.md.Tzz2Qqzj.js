import{_ as a,c as e,o as t,U as r}from"./chunks/framework.JOuG_fhp.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"practice/dataScreenScale/大屏自适应scale方案.md","filePath":"practice/dataScreenScale/大屏自适应scale方案.md"}'),p={name:"practice/dataScreenScale/大屏自适应scale方案.md"},c=r('<h2 id="前提" tabindex="-1">前提 <a class="header-anchor" href="#前提" aria-label="Permalink to &quot;前提&quot;">​</a></h2><p>假设屏幕宽度为1920 * 1080,宽高比约为1.7</p><h2 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h2><h3 id="设计稿和屏幕宽高比同为1-1" tabindex="-1">设计稿和屏幕宽高比同为1:1 <a class="header-anchor" href="#设计稿和屏幕宽高比同为1-1" aria-label="Permalink to &quot;设计稿和屏幕宽高比同为1:1&quot;">​</a></h3><p>这种情况下,直接缩放就行了</p><h3 id="屏幕的宽高比比设计稿的宽高比要小" tabindex="-1">屏幕的宽高比比设计稿的宽高比要小 <a class="header-anchor" href="#屏幕的宽高比比设计稿的宽高比要小" aria-label="Permalink to &quot;屏幕的宽高比比设计稿的宽高比要小&quot;">​</a></h3><p>为了简单计算, 假设设计稿宽度为2160 * 1080,宽高比为2</p><p>设计稿宽度大于屏幕宽度,此时为了全部内容展示完全,我们设计稿的宽度要缩小,当设计稿的宽度缩小到1920时,设计稿高度也要等比例缩小,此时设计稿高度肯定小于1080,于是出现了上下留白</p><p>此时缩放的比例应该是 屏幕宽度 / 设计稿宽度 , 这是因为设计稿比屏幕宽度大,因此要把设计稿缩小,这样计算出来的倍数小于1</p><h3 id="屏幕的宽高比比设计稿的宽高比要大" tabindex="-1">屏幕的宽高比比设计稿的宽高比要大 <a class="header-anchor" href="#屏幕的宽高比比设计稿的宽高比要大" aria-label="Permalink to &quot;屏幕的宽高比比设计稿的宽高比要大&quot;">​</a></h3><p>为了简单计算, 假设设计稿宽度为1620 * 1080,宽高比为1.5</p><p>此时可以看出可以直接展示全部内容,因此直接居中就行,这个例子我们看不出要怎么处理,我们换个例子</p><p>假设设计稿宽度为1920 * 1920,宽高比为1</p><p>设计稿高度大于屏幕高度,此时为了全部内容展示完全,我们设计稿的高度要缩小,当设计稿的高度缩小到1080时,设计稿宽度也要等比例缩小,此时设计稿宽度肯定小于1920,于是出现了左右留白</p><p>此时缩放的比例应该是 屏幕高度 / 设计稿高度, 这是因为设计稿比屏幕高度大,因此要把设计稿缩小,这样计算出来的倍数小于1</p><h2 id="留白问题怎么处理" tabindex="-1">留白问题怎么处理? <a class="header-anchor" href="#留白问题怎么处理" aria-label="Permalink to &quot;留白问题怎么处理?&quot;">​</a></h2><p>只要让屏幕背景色或者背景图片符合主题即可,就不会出现突兀的空白</p><h2 id="总结公式" tabindex="-1">总结公式 <a class="header-anchor" href="#总结公式" aria-label="Permalink to &quot;总结公式&quot;">​</a></h2><p>C = 屏幕宽度 / 屏幕高度</p><p>D = 设计稿宽度 / 设计稿高度</p><p>WW = 屏幕宽度 / 设计稿宽度</p><p>HH = 屏幕高度 / 设计稿高度</p><p>当 C / D &lt; 1, scale = WW</p><p>当 C / D &gt; 1, scale = HH</p><p>转换一下,简化一下可以得出</p><p>C / D &lt; 1 ==&gt; WW / HH &lt; 1</p><p>C / D &gt; 1 ==&gt; WW / HH &gt; 1</p><p>最终得到 scale = WW / HH &lt; 1 ? WW : HH ==&gt; WW &lt; HH ? WW : HH</p>',28),l=[c];function o(i,n,s,h,d,_){return t(),e("div",null,l)}const H=a(p,[["render",o]]);export{m as __pageData,H as default};
